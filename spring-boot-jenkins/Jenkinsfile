pipeline {
    agent any
    tools {
        maven 'maven3.9.0'
        jdk 'jdk17'
    }
    environment {
        SONARQUBE_URL = 'http://localhost:9000'
        SONARQUBE_TOKEN = credentials('sonarqube-jenkins-token') // Ensure this ID matches the stored token in Jenkins
    }
    stages {
        stage ('Initialize') {
            steps {
                sh '''
		    echo "Build initialized..."
                    echo "PATH = ${PATH}"
		    echo "JAVA_HOME = ${JAVA_HOME}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Build') {
            steps {
		dir('spring-boot-jenkins') {
			sh 'mvn -DskipTests=true clean package' 
		}
            }
        }

	stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar -Dsonar.projectKey=spring-boot-app -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN'
                }
            }
	    post {
        	success {
            		echo 'SonarQube analysis completed successfully!!!'
            	}
         	failure {
            		echo 'SonarQube analysis failed!!!'
        	}
    	   }
        }
	    
        stage ('Test') {
            steps {
		dir('spring-boot-jenkins') {
			sh 'mvn test' 
		}
            }
            post {
                success {
			dir("spring-boot-jenkins") {
				junit 'target/surefire-reports/**/*.xml'
			}
                }
            }
        }		
		
        stage ('Deploy') {
            steps {
                sh '''
                    echo "Deploy to Server....DONE"
                '''
            }
        }		
    }
}
